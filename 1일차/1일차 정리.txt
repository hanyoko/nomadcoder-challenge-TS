23/05/29

Welcome!

Today's quiz is about lectures #1.5 to #2.1

오늘의 강의: Typescript로 블록체인 만들기: From #1.5 to #2.1
오늘의 과제: 위의 강의를 시청하신 후, 아래 퀴즈를 풀면 됩니다.
제출기간: 익일 오전 6시까지
퀴즈는 단 1회만 응할 수 있습니다.

typescript
[타입스크립트]

타입스크립트를 사용하는 이유는 안정성 때문이다.
타입 안정성 덕분에 타입스크립트의 장점을 이용할 수 있다.
= 개발자 경험을 누릴 수 있음
= 코드에 버그가 엄청 많이 줄어들게 된다
= 런타임 에러가 줄어든다
= 생산성이 늘어난다 

타입 안정성이 왜 중요한가 ?
->

자바스크립트는 에러를 보여주지 않으려고 노력한다
ex) 
[1,2,3,4] + false
'1,2,3,4false'

숫자 배열에 false를 더하려고 하면 두가지 일이 일어난다
1. 배열이 완전히 사라진다.
2. string으로 변한다.
(boolean인 false는 배열의 마지막에서 string이된다.)
이것은 에러를 발생시켜야하는 출력이지만, 에러를 발생시키지않는다.

왜 배열에 boolean을 더하려고 하지 ?

function divide(a, b) { return a /b }
undefined
divide(2, 3)
0.6666666666666666
divide("xxxxxx")
NaN	//여기서 NaN을 출력시키며 작동이 되면 안 된다
//입력값은 두 개인데 하나 밖에 안 보냈는데 그럼에도 불구하고 NaN이 return되었다.
//에러의 출력이 하나도 없었다.

하지만 우리는 입력값 a와 b가 숫자여야한다는 것을 표시하지 않았기에 컴퓨터가 추측할 수도 없다.
그래서 문자열을 입력해도 NaN이 return 되었던 것이다.

const han = { name: "han"}
    
undefined
han.hello()
VM623:1 Uncaught TypeError: han.hello is not a function
    at <anonymous>:1:5
hello()함수가 없다는 에러를 발생시킨다.
하지만 이건 코드를 실행하기 전에 최소화시킬 수 있는 에러 중 하나
그리고 이 에러는 코드가 실행되고 나서 나타나는 에러이다.
자바스크립트는 이게 에러가 날 거라는 걸 몰라서 그냥 코드를 실행시켰다.
좋은 프로그래밍 언어라면 han 객체를 분석해서 hello() 함수가 없다는 걸 개발자에게 알려줄 것이다.
예를 들어서 Rust나 Go에서는 이런식으로 코드를 작성하면 코드 실행자체가 안 될 것이다.
컴파일에 실패하고 객체에는 hello()함수가 없다고 알려줄 것이다.
이 에러를 고치고 나서야 유저에게 코드를 실행시킬 수 있다고 알려줄 것이다,
자바스크립트의 경우에는 이런 코드를 작성하고 유저에게 전달하면 유저가 코드를 실행했을 때야 비로소 에러가 있다는 걸 알 수 있을 것이다.
이렇기 때문에 자바스크립트를 사용하면 코드에 어떤 에러가 있는지 다른 사람이 개발자한테 알려주게 되는 것이다.
그게 유저가 될 수도 있고, 매니저가 될 수도 있고, 동료 개발자일 수도 있다.
자바스크립트를 사용하고 있기 떄문에 코드를 실행할 때까지 이런 에러가 나도 아무런 경고도 없다
이상적으로는 코드가 실행되기 전에 에러를 잡아야한다
그래서 자바스크립트 보다 타입스크립트를 사용하는 것이다.

